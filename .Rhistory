update.packages(ask = F, checkBuilt = T)
library(xfun)
install.packages("xfun")
curve(x^2, from = -4, to = 4)
curve(log(x), from = -4, to = 4)
curve(1/x, from = -4, to = 4)
abline(h = 0)
abline(v = 0)
update.packages(ask = F, checkBuilt = T)
library(digest)
remove.packages("digest")
install.packages("digest")
install.packages("digest")
remove.packages(c("htmltools", "cli", "xfun"))
install.packages(c("htmltools", "cli", "xfun"))
install.packages(c("htmltools", "cli", "xfun"))
q()
3*3
3 * 3
3 *  3
data$var <- as.numeric(c(0.300866992914498, 0.300866992914498, 0.300866992914498, 0.300866992914498,
0.300866992914498, 0.300866992914498, 0.289135634675147, 0.440702962790827,
0.30245732285827, 0.294519497464001, 0.569483044621322, 0.234058448213571,
0.492779812742853, 0.492055685219478, 0.41875743603914, 0.427659239113259,
0.357671091491268, 0.69555748800712, 0.421414087640934, 0.733895459344749,
0.351128549179359, 0.792330773748164, 0.314138994035899, 0.348472975576337,
0.406142803982334, 0.53789770559929, 0.530580269157779))
datang <- as.numeric(c(0.300866992914498, 0.300866992914498, 0.300866992914498, 0.300866992914498,
0.300866992914498, 0.300866992914498, 0.289135634675147, 0.440702962790827,
0.30245732285827, 0.294519497464001, 0.569483044621322, 0.234058448213571,
0.492779812742853, 0.492055685219478, 0.41875743603914, 0.427659239113259,
0.357671091491268, 0.69555748800712, 0.421414087640934, 0.733895459344749,
0.351128549179359, 0.792330773748164, 0.314138994035899, 0.348472975576337,
0.406142803982334, 0.53789770559929, 0.530580269157779))
datang
class(datang)
str(datang)
plot(datang)
hist(datang)
#### tabel kontingensi tiga arah
tabel <- array(c(26,82,202,121,128,75,24,52,74,44,113,180,221,204,124,32,49,43),
c(3,3,2))
tabel
dimnames(tabel) <- list(c("Liberal", "Moderate", "Conservative"),
c("Yes", "No", "Unsure"),
c("Male", "Female"))
tabel
names(dimnames(tabel)) <- c("Religious View", "Think God", "Gender")
tabel
#### tabel kontingensi tiga arah
tabel <- array(c(26,82,202,121,128,75,24,52,74,44,113,180,221,204,124,32,49,43),
c(3,3,2))
tabel
dimnames(tabel) <- list(c("Liberal", "Moderate", "Conservative"),
c("Yes", "No", "Unsure"),
c("Male", "Female"))
tabel
names(dimnames(tabel)) <- c("Religious View", "Think God", "Gender")
tabel
tabel[1]
### ringkasan tabel (tabel marjinal)
xy <- margin.table(tabel, c(1, 2))
xy
yx <- margin.table(tabel, c(2, 1))
yx
xz <- margin.table(tabel, c(1, 3))
xz
yz <- margin.table(tabel, c(2, 3))
yz
zxy <- margin.table(tabel, c(3, 1, 2))
zxy
qnorm(0.025)
qnorm(0.05)
round(qnorm(0.025),2)
round(qnorm(0.05),2)
round(qnorm(0.1),2)
qt(0.05, 12)
qt(0.05, 24)
qt(0.05, 25)
qt(0.025, 24)
library(BSDA)
install.packages("BSDA")
library(BSDA)
# No 1
prop.test(880, 2000, p = 0.05, alternative = "greater")
# No 1
prop.test(880, 2000, p = 0.5, alternative = "greater")
# No 1
prop.test(1000, 2000, p = 0.5, alternative = "greater")
# No 2
zsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 16,
conf.level = 0.95)
sqrt(24)
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 16,
conf.level = 0.95)
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 16,
alternative = "greater", mu = 50, conf.level = 0.95)
qt(0.05, 15)
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 16,
alternative = "greater", mu = 50, conf.level = 0.95)
?cor.test
x <- c(44.4, 45.9, 41.9, 53.3, 44.7, 44.1, 50.7, 45.2, 60.1)
y <- c( 2.6,  3.1,  2.5,  5.0,  3.6,  4.0,  5.2,  2.8,  3.8)
cor.test(x, y, method = "kendall", alternative = "greater")
cor.test(x, y)
tinggi <- c(120, 100, 140, 110, 120, 90)
bb <- c(36, 34, 46, 38, 40, 30)
cor.test(tinggi, bb)
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
model
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 16,
alternative = "greater", mu = 50, conf.level = 0.95)
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "greater", mu = 50, conf.level = 0.95)
tinggi <- c(120, 100, 140, 110, 120, 90)
bb <- c(36, 34, 46, 38, 40, 30)
cor.test(tinggi, bb)
cor(tinggi, bb)
0.95*sqrt(4)/sqrt(1-0.95^2)
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
?chisq.test
M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477)))
M
dimnames(M) <- list(gender = c("F", "M"),
party = c("Democrat","Independent", "Republican"))
M
(Xsq <- chisq.test(M))  # Prints test summary
Xsq
Xsq$observed   # observed counts (same as M)
Xsq$expected   # expected counts under the null
Xsq$residuals  # Pearson residuals
Xsq$stdres     # standardized residuals
sum(Xsq$residuals)
sum(Xsq$residuals^2)
m <- rbind(c(71, 29),
c(62, 38))
m
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", Tidak))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
m
uji <- chisq.test(m)
summary(uji)
uji
?chisq.test
uji$observed
uji$expected
uji$residuals
sum(uji$residuals^2)
sum(uji$stdres^2)
m <- rbind(c(71, 29),
c(62, 38))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji <- chisq.test(m)
uji$observed
uji$expected
uji$residuals
sum(uji$residuals^2)
sqrt(sum(uji$residuals^2))
sum(uji$residuals^2)^2
uji <- chisq.test(m)
uji
uji$observed-
uji$expected+
uji$residuals
uji$observed-
uji$expected-
uji$residuals
uji$observed-
uji$expected
uji$residuals
uji$observed
uji$expected
uji$residuals
uji$residuals
sum(uji$residuals^2)
m <- rbind(c(20, 60),
c(40, 40))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji
m <- rbind(c(10, 70),
c(40, 40))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji
m <- rbind(c(10, 70),
c(60, 20))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji
uji <- chisq.test(m)
uji
uji$observed
uji$expected
uji$residuals
m <- rbind(c(10, 70),
c(60, 20))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji <- chisq.test(m)
uji
uji$observed
uji$expected
uji$residuals
model <- lm(y ~ x)
summary(model)
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
Jarak <- c(31, 38, 48, 52, 63, 67, 75, 84, 89, 99)
Emisi <- c(553, 590, 608, 682, 752, 725, 834, 752, 845,	960)
model <- lm(Emisi ~ Jarak)
summary(model)
m <- rbind(c(10, 70),
c(60, 20))
dimnames(m) <- list(JK = c("L", "P"),
Hukuman_Mati = c("Setuju", "Tidak"))
uji <- chisq.test(m)
uji
summary(uji)
uji$statistic
uji$parameter
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
Jarak <- c(31, 38, 48, 52, 63, 67, 75, 84, 89, 99)
Emisi <- c(553, 590, 608, 682, 752, 725, 834, 752, 845,	960)
model <- lm(Emisi ~ Jarak)
summary(model)
# No 1
prop.test(1200, 2000, p = 0.5, alternative = "greater")  # A1
prop.test(600, 1000, p = 0.5, alternative = "greater")
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "greater", mu = 50, conf.level = 0.95)
library(BSDA)
# No 2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "greater", mu = 50, conf.level = 0.95)
# No 4
x <- c(1, 2, 4, 6, 7)
y <- c(6, 10, 14, 16, 20)
model <- lm(y ~ x)
summary(model)
# No 3
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "less",
conf.level = 0.95, var.equal = T) #A1
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "less", mu = 50, conf.level = 0.95) #A2
tsum.test(mean.x = 55, s.x = sqrt(4.2), n.x = 25,
alternative = "less", mu = 50, conf.level = 0.95) #A2
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
# No 3
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "less",
conf.level = 0.95, var.equal = T) #A1
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
tsum.test(mean.x = 40, s.x = 6, n.x = 15,
mean.y = 50, s.y = 10.2, n.y = 10,
alternative = "two.sided",
conf.level = 0.95, var.equal = T) #A2
?lm
model <- lm(y ~ x)
summary(model)
anova(model)
iris
Lama_Studi <- c(14, 25, 15,	5, 10, 12, 5, 21)
IPK <- c(2.8,	3.6, 3.4,	3, 3.1,	3.3, 2.7,	3.8)
model <- lm(IPK ~ Lama_Studi)
summary(model)
Lama_Studi <- c(14, 25, 15,	5, 10, 12, 5, 21)
IPK <- c(2.8,	3.6, 3.4,	3, 3.1,	3.3, 2.7,	3.8)
model <- lm(IPK ~ Lama_Studi)
summary(model)
anova(model)
0.67454/0.05903
Hershey()
colors()
hcl.colors()
hcl()
demo(hcl)
demo(graphics)
demo(base)
demo(glm.vr)
library(quantmod)
getSymbols("UNVR", from = '2022-01-01',
to = "2022-10-31",warnings = FALSE,
auto.assign = TRUE)
head(UNVR)
x_bar <- 15
sd <- 10
z <- (50-x_bar)/sd
pnorm(50,mean = 15, sd = 10, lower.tail = F)
pnorm(z)
curve(x^2 + y^2, -100,100)
curve(x^2, -100,100)
curve(x^2, -10,100)
curve(x^2, -10,10)
curve(x^2, -10,10)
curve(sin(x), -10,10)
curve(cos(x), -10,10)
curve(tan(x), -10,10)
curve(1/x, 0,10)
curve(1/x, -10, 10)
curve(1/x, -10, 10)
?curve
curve(1/x, -10, 10)
curve(^2, -10, 10, add = TRUE)
curve(1/x, -10, 10)
curve(x^2, -10, 10, add = TRUE)
curve(-x^2, -10, 10, add = TRUE)
?curve
data(mtcars)
x <- mtcars[, c("cyl", "gear", "carb", "hp")]
item_reliability(x)
install.packages("performance")
library(performance)
data(mtcars)
x <- mtcars[, c("cyl", "gear", "carb", "hp")]
item_reliability(x)
data(mtcars)
x <- mtcars[, c("cyl", "gear", "carb", "hp")]
cronbachs_alpha(x)
install.packages("gptstudio")
require(devtools)
install.packages("devtools", dependencies = Y)
install.packages("devtools", dependencies = T)
require(devtools)
install_github("MichelNivard/gptstudio")
library(fastmap)
install.packages(c("blavaan", "cachem", "dbplyr", "dtplyr", "fastmap", "flextable", "forecast", "Formula", "haven", "httr", "igraph", "lava", "packrat", "posterior", "RcppArmadillo", "RcppParallel", "recipes", "tidyverse", "xts"))
update.packages(ask = F, checkBuilt = T)
install_github("MichelNivard/gptstudio")
require(devtools)
install_github("MichelNivard/gptstudio")
install_github("MichelNivard/gptstudio", force = TRUE)
gptstudio:::chat_gpt_addin()
Sys.setenv(OPENAI_API_KEY = "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")
gptstudio:::chat_gpt_addin()
Sys.setenv(OPENAI_API_KEY = "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")
#!/usr/bin/env python
# -*- coding: utf-8 -*-
import re
curve(-x^2 + 5, -10, 10, add = TRUE, col = "pink", lwd = 4)
curve(-x^2 + x, -10, 10, add = TRUE)
curve(-x^2 + 5, -10, 10, add = TRUE, col = "pink", lwd = 4)
curve(x^2, -10, 10, add = TRUE)
update.packages(ask = F, checkBuilt = T)
t.test(iris$Sepal.Length, mu = 12, alternative = "greater")
t.test(iris$Sepal.Length, mu = 4, alternative = "greater")
t.test(iris$Sepal.Length, mu = 5, alternative = "greater")
t.test(iris$Sepal.Length, mu = 5.7, alternative = "greater")
t.test(iris$Sepal.Length, mu = 5.8, alternative = "greater")
curve(x, from = 1, to = 10)
?curve
curve(rnorm)
curve(dnorm)
curve(t)
?t
dt
curve(dt)
curve(dt(23,5))
?dt
ikan <- c("salmon", "Teri", "Tuna")
sayur <- c("Brokoli", "Letuce", "Bayam")
yoghurt <- c("plain", "apple", "orange")
ls(list = "y")
ls(pat = "y")
ikan <- c("salmon", "Teri", "Tuna")
sayur <- c("Brokoli", "Letuce", "Bayam")
yoghurt <- c("plain", "apple", "orange")
ls(pat = "y")
ikan <- c("salmon", "Teri", "Tuna")
sayur <- c("Brokoli", "Letuce", "Bayam")
yoghurt <- c("plain", "apple", "orange")
ls(pat = "y")
1 - pt(1:5, df = 1)
qt(.975, df = c(1:10,20,50,100,1000))
tt <- seq(0, 10, length.out = 21)
ncp <- seq(0, 6, length.out = 31)
ptn <- outer(tt, ncp, function(t, d) pt(t, df = 3, ncp = d))
t.tit <- "Non-central t - Probabilities"
image(tt, ncp, ptn, zlim = c(0,1), main = t.tit)
persp(tt, ncp, ptn, zlim = 0:1, r = 2, phi = 20, theta = 200, main = t.tit,
xlab = "t", ylab = "non-centrality parameter",
zlab = "Pr(T <= t)")
plot(function(x) dt(x, df = 3, ncp = 2), -3, 11, ylim = c(0, 0.32),
main = "Non-central t - Density", yaxs = "i")
install.packages("insatllr")
install.packages("installr")
library(installr)
installr::get_latest_r_version()
library(installr)
?updateR
updateR()
Sys.info()
update.packages(ask = F, checkBuilt = T)
update.packages(ask=F, checkBuilt = T)
update.packages(ask = F, checkBuilt = T)
library(flexdashboard)
Sys.setlocale("LC_TIME", "IND")
#library(flipTime)
#UpdateEvery(1, "hours", options = "wakeup")
library(readxl)
db <- read_excel("data.xlsx")
library(tidyverse)
data <- db %>%
group_by(prodi) %>%
summarize(minat = max(peminat))
data <- read_excel("G:/My Drive/#PMB/2023/03_SMM/23smm/Statistik_Keketatan_Prodi_smmptn_2023.xlsx")
data
data <- data[,-2]
names(data)
setwd("G:/My Drive/#PMB/2023/03_SMM/23smm")
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/Website/update_data_dosen")
library(kableExtra)
library(readxl)
library(tidyverse)
library(tidyverse)
library(janitor)
library(kableExtra)
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/")
pns <- NULL
for (i in 1:7) {
pns <- rbind(pns, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/", list[i])))
}
data1 <- select(pns, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data1 <- pivot_wider(data1, names_from = JK, values_from = "n")
data1[is.na(data1)] <- 0
data1 <- adorn_totals(data1, where = c("col"), name = "JML")
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data")
non <- NULL
for (i in 1:7) {
non <- rbind(non, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data/", list[i]), range = "A1:M100"))
}
# membuang semua baris yang kosong
non <- non %>% filter_all(any_vars(complete.cases(.)))
data2 <- select(non, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data2 <- pivot_wider(data2, names_from = JK, values_from = "n")
data2[is.na(data2)] <- 0
data2 <- adorn_totals(data2, where = c("col"), name = "JML")
data <- left_join(data1, data2, by = "Fakultas")
data[is.na(data)] <- 0
data$Total <- data$JML.x + data$JML.y
data <- adorn_totals(data, where = c("row"), name = "Total")
names(data) <- c("Fakultas", "L", "P", "JML", "L", "P", "JML", "Total")
kable(data) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 3, "Dosen Non PNS" = 3, " " = 1))
jf_pns <- select(pns, Fakultas, JABATAN) %>% group_by(Fakultas, JABATAN) %>% summarize(n = n()) %>% pivot_wider(names_from = JABATAN, values_from = "n")
jf_pns <- select(jf_pns, Fakultas, GB, LK, L, AA, TP)
jf_pns[is.na(jf_pns)] <- 0
jf_pns <- adorn_totals(jf_pns, where = c("col"), name = "JML")
jf_non <- select(non, Fakultas, JFA) %>% group_by(Fakultas, JFA) %>% summarize(n = n()) %>% pivot_wider(names_from = JFA, values_from = "n")
jf_non <- select(jf_non, Fakultas, L, AA, TP)
jf_non[is.na(jf_non)] <- 0
jf_non <- adorn_totals(jf_non, where = "col", name = "JML")
jf <- left_join(jf_pns, jf_non, by = "Fakultas")
jf[is.na(jf)] <- 0
jf$Total <- jf$JML.x + jf$JML.y
fak <- data.frame(Fakultas = c("Hukum", "FKIP", "Teknik", "Pertanian","FEB", "FISIP", "Kedokteran"),
fak_order = c(1:7))
jf <- left_join(jf, fak, by = "Fakultas") %>% arrange(fak_order) %>% select(-fak_order)
jf <- adorn_totals(jf, where = "row", name = "Total")
names(jf) <- c("Fakultas", "GB", "LK", "L", "AA", "TP", "Jumlah", "L", "AA", "TP", "Jumlah", "Total")
kable(jf) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 6, "Dosen Non PNS" = 4, " " = 1))
kable(jf) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 6, "Dosen Non PNS" = 4, " " = 1))
devtools::install_github("kupietz/kableExtra")
install.packages("devtools")
devtools::install_github("kupietz/kableExtra")
detach("package:dplyr", unload = TRUE)
remove.packages("kableExtra")
devtools::install_github("kupietz/kableExtra")
devtools::install_github("kupietz/kableExtra")
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/Website/update_data_dosen")
