data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(3, 40, 10, 2, 50, 5, 6, 3, 10, 4))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(300, 4000, 1000, 200, 5000, 500, 600, 300, 1000, 400))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
data <- data.frame(x = c(2, 3, 1, 9, 5, 4, 3, 8, 1, 4),
y = c(0.03, 0.4, 0.1, 0.02, 0.5, 0.05, 0.06, 0.03, 0.10, 0.04))
set.seed(123)
klaster <- kmeans(data, 3)
klaster$cluster
library(reticulate)
conda_install("pandas")
conda acitvate pandas
conda activate pandas
reticulate::repl_python()
print("hello")
import pandas as pd
quit
library(reticulate)
py_install("pandas")
library(reticulate)
# create a new environment
conda_create("r-reticulate")
# install SciPy
conda_install("r-reticulate", "scipy", "pandas")
conda_install("pandas")
py_install("pandas")
use_condaenv("r-reticulate")
conda_install("pandas")
# install SciPy
conda_install("r-reticulate", "scipy", "pandas")
conda_install("r-reticulate", packages = "pandas")
# import SciPy (it will be automatically discovered in "r-reticulate")
scipy <- import("pandas")
# install SciPy
conda_install("r-reticulate", "scipy")
reticulate::repl_python()
pip install scipy
py pip install scipy
print("hello")
from scipy import sc
print(5+6)
exit
library(reticulate)
use_condaenv("r-reticulate")
conda_install("r-reticulate", "pandas")
# import SciPy (it will be automatically discovered in "r-reticulate")
pd <- import("pandas")
conda_install("r-reticulate", "pandas")
# install SciPy
conda_install("r-reticulate", "scipy")
# import SciPy (it will be automatically discovered in "r-reticulate")
sc <- import("scipy")
# install SciPy
conda_install("r-reticulate", "scipy")
import pandas as pd
reticulate::repl_python()
import pandas as pd
pip install pandas
quit
py_install("pandas")
use_python()
library(reticulate)
os <- import("os")
os$listdir
os$listdir(.)
os$listdir('.')
Sys.which("python")
reticulate::repl_python()
import pandas as pd
pip
quit
library(reticulate)
# create a new environment
conda_create('cato')
use_condaenv('cato')
# install SciPy
conda_install('cato', 'pip')
conda_install('cato', 'pandas')
os <- import("os")
os$listdir('.')
Sys.which("python")
# import SciPy (it will be automatically discovered in "r-reticulate")
sc <- import("scipy")
library(reticulate)
os <- import("os")
os$listdir('.')
Sys.which("python")
reticulate::repl_python()
import pandas
install pandas
py_install("pandas")
blogdown::find_hugo('all')
options(blogdown.hugo.version = '0.88.1')
blogdown::new_site(dir = "~/Documents/Github Publish/example-academic",
install_hugo = FALSE,
theme = "wowchemy/starter-academic")
blogdown::build_site()
library(reticulate)
use_condaenv('cato')
conda_install('cato', 'matplotlib.pyplot')
conda_install('cato', 'matplotlib')
reticulate::repl_python()
import numpy as np
from matplotlib import pyplot as plt
pip install matplotlib
!pip install matplotlib
exit
xaringan:::inf_mr()
setwd("H:/My Drive/Dokumen Abah/Lamaran Dosen/Unsera/Unsera_Statistika/Pertemuan 03/uns-stk-03")
xaringan:::inf_mr()
setwd("H:/My Drive/Dokumen Abah/Lamaran Dosen/Unsera/Unsera_Statistika/Pertemuan 04/uns-stk-04")
remotes::install_github("rstudio/chromote")
install.packages(c("progress", "jsonlite", "pdftools", "digest"))
source("https://git.io/xaringan2pdf")
xaringan_to_pdf("https://masdian.github.io/uns-stk-03")
getwd()
dir()
xaringan_to_pdf("https://masdian.github.io/uns-stk-01")
#' Print xaringan slides to PDF
#'
#' Prints xaringan slides to a PDF file, even complicated slides
#' with panelsets or other html widgets or advanced features.
#' Requires a local installation of Chrome.
#'
#' @param input Path to Rmd or html file of xaringan slides.
#' @param output_file The name of the output file. If using NULL then
#'   the output filename will be based on filename for the input file.
#'   If a filename is provided, a path to the output file can also be provided.
#' @param delay Seconds of delay between advancing to and printing
#'   a new slide.
#' @param include_partial_slides Should partial (continuation) slides be
#'   included in the output? If `FALSE`, the default, only the complete slide
#'   is included in the PDF.
xaringan_to_pdf <- function(
input,
output_file = NULL,
delay = 1,
include_partial_slides = FALSE
) {
if (!requireNamespace("chromote", quietly = TRUE)) {
stop("`chromote` is required: devtools::install_github('rstudio/chromote')")
}
required_packages <- c("progress", "jsonlite", "pdftools", "digest", "fs")
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
stop("`", pkg, "` is required: install.packages('", pkg, "')")
}
}
is_url <- grepl("^(ht|f)tp", tolower(input))
if (is.null(output_file)) {
if (is_url) {
output_file <- fs::path_ext_set(fs::path_file(input), "pdf")
} else {
output_file <- fs::path_ext_set(input, "pdf")
}
}
if (!is_url && !grepl("^file://", input)) {
if (!tolower(fs::path_ext(input)) %in% c("htm", "html")) {
stop("`input` must be the HTML version of the slides.")
}
input <- paste0("file://", fs::path_abs(input))
}
b <- chromote::ChromoteSession$new()
on.exit(b$close(), add = TRUE)
b$Page$navigate(input, wait_ = TRUE)
b$Page$loadEventFired()
has_remark <- b$Runtime$evaluate("typeof slideshow !== 'undefined'")$result$value
if (!has_remark) {
stop("Input does not appear to be xaringan slides: ", input)
}
current_slide <- function() {
x <- b$Runtime$evaluate("slideshow.getCurrentSlideIndex()")$result$value
as.integer(x) + 1L
}
slide_is_continuation <- function() {
b$Runtime$evaluate(
"document.querySelector('.remark-visible').matches('.has-continuation')"
)$result$value
}
hash_current_slide <- function() {
digest::digest(b$Runtime$evaluate(
"document.querySelector('.remark-visible').innerHTML"
)$result$value)
}
get_ratio <- function() {
r <- b$Runtime$evaluate('slideshow.getRatio()')$result$value
r <- lapply(strsplit(r, ":"), as.integer)
width <- r[[1]][1]
height <- r[[1]][2]
page_width <- 8/width * width
list(
width = as.integer(908 * width / height),
height = 681L,
page = list(width = page_width, height = page_width * height / width)
)
}
slide_size <- get_ratio()
expected_slides <- as.integer(
b$Runtime$evaluate("slideshow.getSlideCount()")$result$value
)
max_slides <- expected_slides * 4
b$Browser$setWindowBounds(1, bounds = list(
width = slide_size$width,
height = slide_size$height
))
b$Emulation$setEmulatedMedia("print")
b$Runtime$evaluate(paste0(
"let style = document.createElement('style')\n",
"style.innerText = '@media print { ",
".remark-slide-container:not(.remark-visible){ display:none; }",
if (include_partial_slides) " .has-continuation { display: block }",
"}'\n",
"document.head.appendChild(style)"
))
pb <- progress::progress_bar$new(
format = "Slide :slide (:part) [:bar] Eta: :eta",
total = expected_slides
)
idx_slide <- current_slide()
last_hash <- ""
idx_part <- 0L
pdf_files <- c()
for (i in seq_len(max_slides)) {
if (i > 1) {
b$Input$dispatchKeyEvent(
"rawKeyDown",
windowsVirtualKeyCode = 39,
code = "ArrowRight",
key = "ArrowRight",
wait_ = TRUE
)
}
if (current_slide() == idx_slide) {
step <- 0L
idx_part <- idx_part + 1L
} else {
step <- 1L
idx_part <- 1L
}
idx_slide <- current_slide()
pb$tick(step, tokens = list(slide = idx_slide, part = idx_part))
if (!isTRUE(include_partial_slides) && slide_is_continuation()) next
Sys.sleep(delay)
this_hash <- hash_current_slide()
if (identical(last_hash, this_hash)) break
last_hash <- this_hash
pdf_file_promise <- b$Page$printToPDF(
landscape = TRUE,
printBackground = TRUE,
paperWidth = 12,
paperHeight = 9,
marginTop = 0,
marginRight = 0,
marginBottom = 0,
marginLeft = 0,
pageRanges = "1",
preferCSSPageSize = TRUE,
wait_ = FALSE
)$then(function(value) {
filename <- tempfile(fileext = ".pdf")
writeBin(jsonlite::base64_dec(value$data), filename)
filename
})
pdf_files <- c(pdf_files, b$wait_for(pdf_file_promise))
}
pdftools::pdf_combine(pdf_files, output = output_file)
fs::file_delete(pdf_files)
invisible(output_file)
}
xaringan_to_pdf("https://masdian.github.io/uns-stk-01")
?xaringan_to_pdf
dir()
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/Website/update_data_dosen")
library(readxl)
library(tidyverse)
library(janitor)
library(kableExtra)
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/")
pns <- NULL
for (i in 1:7) {
pns <- rbind(pns, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/", list[i])))
}
pns
dim(pns)
data1 <- select(pns, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data1 <- pivot_wider(data1, names_from = JK, values_from = "n")
data1[is.na(data1)] <- 0
data1 <- adorn_totals(data1, where = c("col"), name = "JML")
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data")
non <- NULL
for (i in 1:7) {
non <- rbind(non, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data/", list[i])))
}
?read_excel
non <- NULL
for (i in 1:7) {
non <- rbind(non, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data/", list[i]), range = "A1:M100"))
}
dim(non)
non
View(non)
non <- non %>% filter_all(any_vars(complete.cases(.)))
dim(non)
