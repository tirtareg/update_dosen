x13 <- apply(data[, 12:17], 1, mean)
x14 <- apply(data[, 17:21], 1, mean)
x21 <- apply(data[, 35:40], 1, mean)
x22 <- apply(data[, 41:44], 1, mean)
x23 <- apply(data[, 45:49], 1, mean)
x24 <- apply(data[, 50:53], 1, mean)
x25 <- apply(data[, 54:56], 1, mean)
x31 <- apply(data[, 23:26], 1, false)
x11 <- apply(data[, 2:6], 1, mean)
x12 <- apply(data[, 7:11], 1, mean)
x13 <- apply(data[, 12:17], 1, mean)
x14 <- apply(data[, 17:21], 1, mean)
x21 <- apply(data[, 35:40], 1, mean)
x22 <- apply(data[, 41:44], 1, mean)
x23 <- apply(data[, 45:49], 1, mean)
x24 <- apply(data[, 50:53], 1, mean)
x25 <- apply(data[, 54:56], 1, mean)
x31 <- apply(data[, 23:26], 1, mean)
x32 <- apply(data[, 27:30], 1, mean)
x33 <- apply(data[, 31:34], 1, mean)
y11 <- apply(data[, 57:60], 1, mean)
y12 <- apply(data[, 61:64], 1, mean)
y13 <- apply(data[, 65:68], 1, mean)
y21 <- apply(data[, 69:70], 1, mean)
y22 <- apply(data[, 71:73], 1, mean)
y23 <- apply(data[, 74:76], 1, mean)
y24 <- apply(data[, 77:79], 1, mean)
x11
ax1 <- alpha(x1, check.keys = T)
ax1
ax1$scores
ax1$alpha.drop
if(!require(psych)){
install.packages("psych")
library(psych)
}
set.seed(123)
acak <- sample(1:nrow(data), 30) # memilih 30 responden secara acak
data_30 <- data[acak,]
ax1$total
ax1$total$raw_alpha
alpha(x1, check.keys = T)
ax1$alpha.drop
ax1$alpha.drop$raw_alpha
ax1$alpha.drop$raw_alpha[2]
ax1$alpha.drop[1,1]
ax1$alpha.drop[2,1]
rownnames(ax1)
rownames(ax1)
rownames(ax1$alpha.drop)
ncol(x1)
ax1$total
rownames(ax1$alpha.drop[1])
rownames(ax1$alpha.drop[2])
rownames(ax1$alpha.drop[1,])
invalid <- NULL
for (i in (1:ncol(x1))) {
if (ax1$alpha.drop[i,1] < ax1$total$raw_alpha) {
invalid <- c(invalid, rownames(ax1$alpha.drop[i,]))
}
}
invalid
invalid <- NULL
for (i in (1:ncol(x1))) {
if (ax1$alpha.drop[i,1] > ax1$total$raw_alpha) {
invalid <- c(invalid, rownames(ax1$alpha.drop[i,]))
}
}
invalid
ax2 <- alpha(x2, check.keys = T)
ax2
invalid <- NULL
for (i in (1:ncol(x1))) {
if (ax2$alpha.drop[i,1] > ax2$total$raw_alpha) {
invalid <- c(invalid, rownames(ax2$alpha.drop[i,]))
}
}
invalid
ax3 <- alpha(x3, check.keys = T)
ax3
invalid <- NULL
for (i in (1:ncol(x3))) {
if (ax3$alpha.drop[i,1] > ax3$total$raw_alpha) {
invalid <- c(invalid, rownames(ax3$alpha.drop[i,]))
}
}
invalid
ax2 <- alpha(x2, check.keys = T)
ax2
invalid <- NULL
for (i in (1:ncol(x2))) {
if (ax2$alpha.drop[i,1] > ax2$total$raw_alpha) {
invalid <- c(invalid, rownames(ax2$alpha.drop[i,]))
}
}
invalid
ay1 <- alpha(y1, check.keys = T)
ay1
invalid <- NULL
for (i in (1:ncol(y1))) {
if (ay1$alpha.drop[i,1] > ay1$total$raw_alpha) {
invalid <- c(invalid, rownames(ay1$alpha.drop[i,]))
}
}
invalid
ay2 <- alpha(y2, check.keys = T)
ay2
invalid <- NULL
for (i in (1:ncol(y2))) {
if (ay2$alpha.drop[i,1] > ay2$total$raw_alpha) {
invalid <- c(invalid, rownames(ay2$alpha.drop[i,]))
}
}
invalid
names(y2)
rt(10,5)
curve(dnorm(x), from = -5, to 5)
curve(dnorm(100), from = -5, to 5)
curve(dnorm(x), from = -5, to = 5)
curve(dt(x), from = -5, to = 5)
curve(dt(x, 10), from = -5, to = 5)
curve(dnorm(x), from = -5, to = 5)
library(semPlot)
semPlot::semSyntax()
?semPaths
# A silly dataset:
X <- rnorm(100)
Y <- rnorm(100)
Z <- rnorm(1)*X + rnorm(1)*Y + rnorm(1)*X*Y
DF <- data.frame(X,Y,Z)
# Regression including interaction:
res <- lm(Z ~ X*Y, data = DF)
# Path diagram:
semPaths(res, intAtSide=TRUE)
# Standardized estimates:
semPaths(res,"std","hide", intAtSide=TRUE)
# Simple CFA -------------------------------------------
library("lavaan")
example(cfa)
semPaths(fit, 'std', 'est', curveAdjacent = TRUE, style = "lisrel")
# MIMIC model ----------------------------------------------------
## Lavaan
## Not run:
library("lavaan")
# Example 5.8 from mplus user guide:
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.8.dat")
# Run Lavaan:
library("lavaan")
fit <- lavaan:::cfa(model.Lavaan, data=Data, std.lv=TRUE)
# Example 5.8 from mplus user guide:
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.8.dat")
Data
names(Data) <- c(paste("y", 1:6, sep=""),
paste("x", 1:3, sep=""))
# Model:
model.Lavaan <- 'f1 =~ y1 + y2 + y3
f2 =~ y4 + y5 + y6
f1 + f2 ~ x1 + x2 + x3 '
# Run Lavaan:
library("lavaan")
fit <- lavaan:::cfa(model.Lavaan, data=Data, std.lv=TRUE)
# Plot path diagram:
semPaths(fit,title=FALSE)
# Omit exogenous covariances:
semPaths(fit,title=FALSE, exoVar = FALSE, exoCov = FALSE)
# Standardized parameters:
semPaths(fit,"std", edge.label.cex = 0.5, exoVar = FALSE,
exoCov = FALSE)
# Same model, now using mplus output:
outfile <- tempfile(fileext=".out")
download.file("http://www.statmodel.com/usersguide/chap5/ex5.8.html",outfile)
# Plot model:
semPaths(outfile,intercepts=FALSE)
# Example 5.8 from mplus user guide:
Data <- read.table("http://www.statmodel.com/usersguide/chap5/ex5.2.dat")
names(Data) <- c("u1","u2","u3","u4","u5","u6")
Data <- as.data.frame(lapply(Data, ordered))
# Lavaan model:
model <- ' f1 =~ u1 + u2 + u3; f2 =~ u4 + u5 + u6 '
# Run Lavaan:
fit <- lavaan::cfa(model, data=Data)
# Plot path diagram:
semPaths(fit,intercepts=FALSE)
# Same model, now using mplus output:
outfile <- tempfile(fileext=".out")
download.file("http://www.statmodel.com/usersguide/chap5/ex5.2.html",outfile)
# Plot model:
semPaths(outfile)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. Write code']
rec3 [label =  'Step 3. Making Love']
rec4 [label = 'Step 4. PROFIT']
rec5 [label = 'Langkah 5. Menjemput Impian']
rec6 [label = 'Langkah 6. Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec4 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6 rec4
}")
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6 -> rec4
}")
update.packages(ask = F, checkBuilt = T)
DiagrammeR::grViz("digraph {
graph [layout = dot, rankdir = TB]
node [shape = rectangle]
rec1 [label = 'Step 1. \n Wake up']
rec2 [label = 'Step 2. \n Write code']
rec3 [label =  'Step 3. \n Making Love']
rec4 [label = 'Step 4. \n PROFIT']
rec5 [label = 'Langkah 5. \n Menjemput Impian']
rec6 [label = 'Langkah 6. \n Makan Enak']
# edge definitions with the node IDs
rec1 -> rec2 -> rec3 -> rec2 -> rec1 -> rec5 -> rec6 -> rec4
}")
library(dplyr)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Length * Sepal.Width),
Mean.Petal.Area = mean(Petal.Length * Petal.Width))
reticulate::repl_python()
import numpy as np
from matplotlib import pyplot as plt
print(2+2)
exit
sum(1:10)
sum(1:100)
_a <- 50
"23"+"24"
a <- array(1:20)
a
dim(a) <- c(4,5)
a
class(a)
a %*% t(a)
M <- matrix(c(9,2,8,3,
0,10,7,6,
0,0,10,9,
0,0,0,12), nrow = 4, byrow = T)
M
# a. perkalian elemen demi elemen dari matriks M
M * M
# b. perkalian matriks M dengan matriks M
M %*% M
# c. invers dari matriks M
solve(M)
# Transpos dari matriks M
t(M)
N <- matrix(c(2,1,8,
6,7,2), nrow = 2, byrow = T)
N
b <- c(6,5,0)
c <- c(6,9,7)
d <- matrix(c(4,1), nrow = 2)
e <- matrix(c(6,3), nrow = 2)
# a. menambahkan b ke baris ke-1 dari N, hasilnya adalah matriks N1.
N1 <- rbind(c(b), N)
N1
# b. menambahkan c ke baris ke-3 dari N, hasilnya adalah matriks N2.
N2 <- rbind(N, c(c))
N2
# c. menambahkan d ke kolom ke-1 dari N, hasilnya adalah matriks N3.
N3 <- cbind(d, N)
N3
# d. menambahkan e ke kolom ke-4 dari N, hasilnya adalah matriks N4.
N4 <- cbind(N, e)
N4
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/Website/update_data_dosen")
library(readxl)
library(tidyverse)
library(janitor)
library(kableExtra)
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/")
pns <- NULL
for (i in 1:7) {
pns <- rbind(pns, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/", list[i])))
}
data1 <- select(pns, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data1 <- pivot_wider(data1, names_from = JK, values_from = "n")
data1[is.na(data1)] <- 0
data1 <- adorn_totals(data1, where = c("col"), name = "JML")
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data")
non <- NULL
for (i in 1:7) {
non <- rbind(non, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data/", list[i]), range = "A1:M100"))
}
# membuang semua baris yang kosong
non <- non %>% filter_all(any_vars(complete.cases(.)))
data2 <- select(non, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data2 <- pivot_wider(data2, names_from = JK, values_from = "n")
data2[is.na(data2)] <- 0
data2 <- adorn_totals(data2, where = c("col"), name = "JML")
data <- left_join(data1, data2, by = "Fakultas")
data[is.na(data)] <- 0
data$Total <- data$JML.x + data$JML.y
data <- adorn_totals(data, where = c("row"), name = "Total")
names(data) <- c("Fakultas", "L", "P", "JML", "L", "P", "JML", "Total")
kable(data) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 3, "Dosen Non PNS" = 3, " " = 1))
jf_pns <- select(pns, Fakultas, JABATAN) %>% group_by(Fakultas, JABATAN) %>% summarize(n = n()) %>% pivot_wider(names_from = JABATAN, values_from = "n")
jf_pns <- select(jf_pns, Fakultas, GB, LK, L, AA, TP)
jf_pns[is.na(jf_pns)] <- 0
jf_pns <- adorn_totals(jf_pns, where = c("col"), name = "JML")
jf_non <- select(non, Fakultas, JFA) %>% group_by(Fakultas, JFA) %>% summarize(n = n()) %>% pivot_wider(names_from = JFA, values_from = "n")
jf_non <- select(jf_non, Fakultas, L, AA, TP)
jf_non[is.na(jf_non)] <- 0
jf_non <- adorn_totals(jf_non, where = "col", name = "JML")
jf <- left_join(jf_pns, jf_non, by = "Fakultas")
jf[is.na(jf)] <- 0
jf$Total <- jf$JML.x + jf$JML.y
fak <- data.frame(Fakultas = c("Hukum", "FKIP", "Teknik", "Pertanian","FEB", "FISIP", "Kedokteran"),
fak_order = c(1:7))
jf <- left_join(jf, fak, by = "Fakultas") %>% arrange(fak_order) %>% select(-fak_order)
jf <- adorn_totals(jf, where = "row", name = "Total")
names(jf) <- c("Fakultas", "GB", "LK", "L", "AA", "TP", "Jumlah", "L", "AA", "TP", "Jumlah", "Total")
kable(jf) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 6, "Dosen Non PNS" = 4, " " = 1))
update.packages(ask = F, checkBuilt = T)
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/Website/update_data_dosen")
suppressWarnings(library(kableExtra))
setwd("G:/My Drive/# REGISTRASI DAN STATISTIK/Website/update_data_dosen")
library(kableExtra)
library(readxl)
library(tidyverse)
library(janitor)
library(kableExtra)
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/")
pns <- NULL
for (i in 1:7) {
pns <- rbind(pns, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/", list[i])))
}
for (i in 1:7) {
pns <- rbind(pns, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/", list[i])))
}
data1 <- select(pns, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data1 <- pivot_wider(data1, names_from = JK, values_from = "n")
data1[is.na(data1)] <- 0
data1 <- adorn_totals(data1, where = c("col"), name = "JML")
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data")
non <- NULL
for (i in 1:7) {
non <- rbind(non, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data/", list[i]), range = "A1:M100"))
}
for (i in 1:7) {
non <- rbind(non, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data/", list[i]), range = "A1:M100"))
}
# membuang semua baris yang kosong
non <- non %>% filter_all(any_vars(complete.cases(.)))
# membuang semua baris yang kosong
non <- non %>% filter_all(any_vars(complete.cases(.)))
data2 <- select(non, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data2 <- pivot_wider(data2, names_from = JK, values_from = "n")
data2[is.na(data2)] <- 0
data2 <- adorn_totals(data2, where = c("col"), name = "JML")
data <- left_join(data1, data2, by = "Fakultas")
data[is.na(data)] <- 0
data$Total <- data$JML.x + data$JML.y
data <- adorn_totals(data, where = c("row"), name = "Total")
names(data) <- c("Fakultas", "L", "P", "JML", "L", "P", "JML", "Total")
kable(data) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 3, "Dosen Non PNS" = 3, " " = 1))
jf_pns <- select(pns, Fakultas, JABATAN) %>% group_by(Fakultas, JABATAN) %>% summarize(n = n()) %>% pivot_wider(names_from = JABATAN, values_from = "n")
jf_pns <- select(jf_pns, Fakultas, GB, LK, L, AA, TP)
jf_pns[is.na(jf_pns)] <- 0
jf_pns <- adorn_totals(jf_pns, where = c("col"), name = "JML")
jf_non <- select(non, Fakultas, JFA) %>% group_by(Fakultas, JFA) %>% summarize(n = n()) %>% pivot_wider(names_from = JFA, values_from = "n")
jf_non <- select(jf_non, Fakultas, L, AA, TP)
jf_non[is.na(jf_non)] <- 0
jf_non <- adorn_totals(jf_non, where = "col", name = "JML")
jf <- left_join(jf_pns, jf_non, by = "Fakultas")
jf[is.na(jf)] <- 0
jf$Total <- jf$JML.x + jf$JML.y
fak <- data.frame(Fakultas = c("Hukum", "FKIP", "Teknik", "Pertanian","FEB", "FISIP", "Kedokteran"),
fak_order = c(1:7))
jf <- left_join(jf, fak, by = "Fakultas") %>% arrange(fak_order) %>% select(-fak_order)
jf <- adorn_totals(jf, where = "row", name = "Total")
names(jf) <- c("Fakultas", "GB", "LK", "L", "AA", "TP", "Jumlah", "L", "AA", "TP", "Jumlah", "Total")
kable(jf) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 6, "Dosen Non PNS" = 4, " " = 1))
library(readxl)
library(tidyverse)
library(janitor)
library(kableExtra)
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/")
pns <- NULL
for (i in 1:7) {
pns <- rbind(pns, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN PNS/Update/", list[i])))
}
data1 <- select(pns, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data1 <- pivot_wider(data1, names_from = JK, values_from = "n")
data1[is.na(data1)] <- 0
data1 <- adorn_totals(data1, where = c("col"), name = "JML")
list <- list.files("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data")
non <- NULL
for (i in 1:7) {
non <- rbind(non, read_excel(paste0("G:/My Drive/# REGISTRASI DAN STATISTIK/DATA PEGAWAI/DOSEN NON PNS/Update Data/", list[i]), range = "A1:M100"))
}
# membuang semua baris yang kosong
non <- non %>% filter_all(any_vars(complete.cases(.)))
data2 <- select(non, Fakultas, JK) %>% group_by(Fakultas, JK) %>% summarize(n = n())
data2 <- pivot_wider(data2, names_from = JK, values_from = "n")
data2[is.na(data2)] <- 0
data2 <- adorn_totals(data2, where = c("col"), name = "JML")
data <- left_join(data1, data2, by = "Fakultas")
data[is.na(data)] <- 0
data$Total <- data$JML.x + data$JML.y
data <- adorn_totals(data, where = c("row"), name = "Total")
names(data) <- c("Fakultas", "L", "P", "JML", "L", "P", "JML", "Total")
kable(data) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 3, "Dosen Non PNS" = 3, " " = 1))
jf_pns <- select(pns, Fakultas, JABATAN) %>% group_by(Fakultas, JABATAN) %>% summarize(n = n()) %>% pivot_wider(names_from = JABATAN, values_from = "n")
jf_pns <- select(jf_pns, Fakultas, GB, LK, L, AA, TP)
jf_pns[is.na(jf_pns)] <- 0
jf_pns <- adorn_totals(jf_pns, where = c("col"), name = "JML")
jf_non <- select(non, Fakultas, JFA) %>% group_by(Fakultas, JFA) %>% summarize(n = n()) %>% pivot_wider(names_from = JFA, values_from = "n")
jf_non <- select(jf_non, Fakultas, L, AA, TP)
jf_non[is.na(jf_non)] <- 0
jf_non <- adorn_totals(jf_non, where = "col", name = "JML")
jf <- left_join(jf_pns, jf_non, by = "Fakultas")
jf[is.na(jf)] <- 0
jf$Total <- jf$JML.x + jf$JML.y
fak <- data.frame(Fakultas = c("Hukum", "FKIP", "Teknik", "Pertanian","FEB", "FISIP", "Kedokteran"),
fak_order = c(1:7))
jf <- left_join(jf, fak, by = "Fakultas") %>% arrange(fak_order) %>% select(-fak_order)
jf <- adorn_totals(jf, where = "row", name = "Total")
names(jf) <- c("Fakultas", "GB", "LK", "L", "AA", "TP", "Jumlah", "L", "AA", "TP", "Jumlah", "Total")
kable(jf) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
add_header_above(c(" " = 1, "Dosen PNS" = 6, "Dosen Non PNS" = 4, " " = 1))
